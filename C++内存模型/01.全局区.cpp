#include <iostream>
using namespace std;
/*
内存大方向划分为4个区域
程序运行前--------------------------------------------------------
代码区：存放函数体的二进制代码，由操作系统管理
		代码区是共享的，可以被频繁调用，但内存中只有一份
		代码区是只读的，防止程序意外修改
全局区：存放全局变量和静态变量以及常量
		字符串常量和其他常量也存放在此
		程序结束后有操作系统释放
程序运行后--------------------------------------------------------
栈区：由编译器自动分配释放，存放函数的参数，局部变量等
堆区：由程序员分配和释放，若程序员不释放，程序结束由操作系统释放
*/
//全局变量
int g_a = 10;
int g_b = 20;
//全局常量
const int c_g_a = 10;
const int c_g_b = 20;
int main()
{
	//局部变量
	int a = 10;
	int b = 20;

	//静态变量
	static int s_a = 10;
	static int s_b = 20;

	//常量 (字符串常量，全局常量，局部常量)
	//局部常量
	const int c_a = 10;
	const int c_b = 20;

	cout << "局部变量a的内存地址" << (int)&a << endl; 
	cout << "局部变量b的内存地址" << (int)&b << endl; 

	cout << "全局变量g_a的内存地址" << (int)&g_a << endl; 
	cout << "全局变量g_b的内存地址" << (int)&g_b << endl; 

	cout << "静态变量s_a的内存地址" << (int)&s_a << endl;
	cout << "静态变量s_b的内存地址" << (int)&s_b << endl;

	cout << "字符串常量内存地址" << (int)&("Hello") << endl;

	cout << "全局常量c_g_a的内存地址" << (int)&c_g_a << endl;
	cout << "全局常量c_g_b的内存地址" << (int)&c_g_b << endl;

	cout << "局部常量c_a的内存地址" << (int)&c_a << endl;
	cout << "局部常量c_b的内存地址" << (int)&c_b << endl;
}


